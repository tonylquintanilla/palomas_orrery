import numpy as np
import math
import plotly.graph_objs as go
from planet_visualization_utilities import (VENUS_RADIUS_AU, KM_PER_AU, create_sphere_points, create_magnetosphere_shape)
from shared_utilities import create_sun_direction_indicator

# Venus Shell Creation Functions

venus_core_info = (
            "Scientists infer that Venus has a central core, likely composed primarily of iron and nickel, similar to Earth's. \n" 
            "Its radius is estimated to be around 3,000 km. Due to the lack of a strong magnetic field, it's speculated that Venus's \n" 
            "core might be solid or only partially liquid, or that it lacks the internal convection that drives Earth's magnetic \n" 
            "field. The exact state and dynamics of Venus's core remain a topic of ongoing research."
)

def create_venus_core_shell(center_position=(0, 0, 0)):
    """Creates Venus's core shell."""
    # Define layer properties
    layer_info = {
        'radius_fraction': 0.5,  # Inner core: 0-50% of Venus's radius
        'color': 'rgb(255, 180, 140)',  # Orange-red for hot iron core
        'opacity': 1.0,
        'name': 'Core',
        'description': (
            "Scientists infer that Venus has a central core, likely composed primarily of iron and nickel, similar to Earth's. <br>" 
            "Its radius is estimated to be around 3,000 km. Due to the lack of a strong magnetic field, it's speculated that Venus's <br>" 
            "core might be solid or only partially liquid, or that it lacks the internal convection that drives Earth's magnetic <br>" 
            "field. The exact state and dynamics of Venus's core remain a topic of ongoing research."
        )
    }
    
    # Calculate radius in AU
    layer_radius = layer_info['radius_fraction'] * VENUS_RADIUS_AU
    
    # Create sphere points
    x, y, z = create_sphere_points(layer_radius, n_points=50)
    
    # Apply center position offset
    center_x, center_y, center_z = center_position
    x = x + center_x
    y = y + center_y
    z = z + center_z
    
    traces = [
        go.Scatter3d(
            x=x, y=y, z=z,
            mode='markers',
            marker=dict(
                size=4.0,
                color=layer_info['color'],
                opacity=layer_info['opacity']
            ),
            name=f"Venus: {layer_info['name']}",
            text=[layer_info['description']] * len(x),
            customdata=[f"Venus: {layer_info['name']}"] * len(x),
            hovertemplate='%{text}<extra></extra>',
            showlegend=True
        )
    ]
    
    return traces

venus_mantle_info = (
            "Surrounding the core is a mantle made of hot, dense silicate rock, much like Earth's mantle. It's believed that heat \n" 
            "generated by radioactive decay within Venus drives slow convection currents in the mantle. These currents are thought \n" 
            "to be responsible for the planet's volcanism and tectonic activity, albeit different from Earth's plate tectonics"
)

def create_venus_mantle_shell(center_position=(0, 0, 0)):
    """Creates Venus's mantle shell."""
    # Define layer properties
    layer_info = {
        'radius_fraction': 0.98,  # Lower mantle: 50-98% of Venus's radius; actually it is nearly 100%, but representing as 98%
        'color': 'rgb(230, 100, 20)',  # Reddish-brown
        'opacity': 0.7,
        'name': 'Mantle',
        'description': (
            "Surrounding the core is a mantle made of hot, dense silicate rock, much like Earth's mantle. It's believed that heat <br>" 
            "generated by radioactive decay within Venus drives slow convection currents in the mantle. These currents are thought <br>" 
            "to be responsible for the planet's volcanism and tectonic activity, albeit different from Earth's plate tectonics"
        )
    }
    
    # Calculate radius in AU
    layer_radius = layer_info['radius_fraction'] * VENUS_RADIUS_AU
    
    # Create sphere points
    x, y, z = create_sphere_points(layer_radius, n_points=50)
    
    # Apply center position offset
    center_x, center_y, center_z = center_position
    x = x + center_x
    y = y + center_y
    z = z + center_z
    
    traces = [
        go.Scatter3d(
            x=x, y=y, z=z,
            mode='markers',
            marker=dict(
                size=3.4,
                color=layer_info['color'],
                opacity=layer_info['opacity']
            ),
            name=f"Venus: {layer_info['name']}",
            text=[layer_info['description']] * len(x),
            customdata=[f"Venus: {layer_info['name']}"] * len(x),
            hovertemplate='%{text}<extra></extra>',
            showlegend=True
        )
    ]
    
    return traces
    
venus_crust_info = (
            "Venus has a crust primarily made of basalt rock, with an estimated thickness ranging from about 10 to 30 kilometers, \n" 
            "possibly thicker in the highland regions. Unlike Earth, Venus does not appear to have plate tectonics. Instead, its \n" 
            "surface is mostly a single, continuous plate. The heat from the mantle escapes through volcanic activity, which is \n" 
            "widespread across the planet, leading to periodic resurfacing events on a global scale."
)

def create_venus_crust_shell(center_position=(0, 0, 0)):
    """Creates Venus's crust shell using Mesh3d for better performance with improved hover."""
    # Define layer properties
    layer_info = {
        'radius_fraction': 1.0,  # Crust: 100% of Venus's radius
        'color': 'rgb(255, 255, 224)',  
        'opacity': 1.0,
        'name': 'Crust',
        'description': (
            "Venus Crust<br>" 
            "(Note: toggle off the crust layer in the legend to better see the interior structure.)<br><br>"
            "Venus has a crust primarily made of basalt rock, with an estimated thickness ranging from about 10 to 30 kilometers, <br>" 
            "possibly thicker in the highland regions. Unlike Earth, Venus does not appear to have plate tectonics. Instead, its <br>" 
            "surface is mostly a single, continuous plate. The heat from the mantle escapes through volcanic activity, which is <br>" 
            "widespread across the planet, leading to periodic resurfacing events on a global scale."
        )
    }
    
    # Calculate radius in AU
    radius = layer_info['radius_fraction'] * VENUS_RADIUS_AU
    
    # Unpack center position
    center_x, center_y, center_z = center_position
    
    # Create mesh with reasonable resolution for performance
    resolution = 24  # Reduced from typical 50 for markers
    
    # Create a UV sphere
    phi = np.linspace(0, 2*np.pi, resolution)
    theta = np.linspace(-np.pi/2, np.pi/2, resolution)
    phi, theta = np.meshgrid(phi, theta)
    
    x = radius * np.cos(theta) * np.cos(phi)
    y = radius * np.cos(theta) * np.sin(phi)
    z = radius * np.sin(theta)
    
    # Apply center position offset
    x = x + center_x
    y = y + center_y
    z = z + center_z
    
    # Create triangulation
    indices = []
    for i in range(resolution-1):
        for j in range(resolution-1):
            p1 = i * resolution + j
            p2 = i * resolution + (j + 1)
            p3 = (i + 1) * resolution + j
            p4 = (i + 1) * resolution + (j + 1)
            
            indices.append([p1, p2, p4])
            indices.append([p1, p4, p3])
    
    # Create main surface
    surface_trace = go.Mesh3d(
        x=x.flatten(), 
        y=y.flatten(), 
        z=z.flatten(),
        i=[idx[0] for idx in indices],
        j=[idx[1] for idx in indices],
        k=[idx[2] for idx in indices],
        color=layer_info['color'],
        opacity=layer_info['opacity'],
        name=f"Venus: {layer_info['name']}",
        showlegend=True,
        hoverinfo='none',  # Disable hover on mesh surface
        # Add these new parameters to make hover text invisible
        hovertemplate=' ',  # Empty template instead of None
        hoverlabel=dict(
    #        bgcolor='rgba(0,0,0,0)',  # Transparent background
            font=dict(
                color='rgba(0,0,0,0)',  # Transparent text
    #            size=0                  # Zero font size
            ),
            bordercolor='rgba(0,0,0,0)'  # Transparent border
        ), 
        # Add these new parameters to eliminate shading
        flatshading=True,  # Use flat shading instead of smooth
        lighting=dict(
            ambient=1.0,     # Set to maximum (1.0)
            diffuse=0.0,     # Turn off diffuse lighting
            specular=0.0,    # Turn off specular highlights
            roughness=1.0,   # Maximum roughness
            fresnel=0.0      # Turn off fresnel effect
        ),
        lightposition=dict(
            x=0,  # Centered light
            y=0,  # Centered light
            z=10000  # Light from very far above to minimize shadows
        )       
    )
        
    # Use the Fibonacci sphere algorithm for more even point distribution
    def fibonacci_sphere(samples=1000):
        points = []
        phi = math.pi * (3. - math.sqrt(5.))  # Golden angle in radians
        
        for i in range(samples):
            y = 1 - (i / float(samples - 1)) * 2  # y goes from 1 to -1
            radius_at_y = math.sqrt(1 - y * y)  # Radius at y
            
            theta = phi * i  # Golden angle increment
            
            x = math.cos(theta) * radius_at_y
            z = math.sin(theta) * radius_at_y
            
            points.append((x, y, z))
        
        return points
    
    # Generate fibonacci sphere points
    fib_points = fibonacci_sphere(samples=50)  # Originally, 50 hover points evenly distributed
    
    # Scale and offset the points
    x_hover = [p[0] * radius + center_x for p in fib_points]
    y_hover = [p[1] * radius + center_y for p in fib_points]
    z_hover = [p[2] * radius + center_z for p in fib_points]
        
    # Create a list of repeated descriptions for each point
    # This is crucial - we need exactly one text entry per point
    hover_texts = [layer_info['description']] * len(x_hover)

    # Just the name for "Object Names Only" mode
    layer_name = f"Venus: {layer_info['name']}"
    minimal_hover_texts = [layer_name] * len(x_hover)

    # Create hover trace with direct text assignment
    hover_trace = go.Scatter3d(
        x=x_hover, 
        y=y_hover, 
        z=z_hover,
        mode='markers',
        marker=dict(
            size=2,  # originally 5
            color='rgb(255, 255, 224)',  # Layer color
            opacity=1.0,  # originally 0.8
            line=dict(  # Add a contrasting outline
                width=1,
                color='black'
            )
        ),
        name=f"Venus: {layer_info['name']} (Info)",
        text=hover_texts,  # IMPORTANT: Matching length with coordinate arrays
        customdata=minimal_hover_texts,  # For "Object Names Only" mode
        hovertemplate='%{text}<extra></extra>',  # Use the standard hover template
        showlegend=False  # Don't show in legend since it's just for hover
    )

    return [surface_trace, hover_trace]

venus_atmosphere_info = (
            "Venus boasts an extremely dense atmosphere, about 90 times the pressure of Earth's atmosphere at the surface. It is \n" 
            "composed primarily of carbon dioxide (about 96.5%) and nitrogen (about 3.5%), with trace amounts of other gases, \n" 
            "including sulfuric acid clouds that completely enshroud the planet. This thick, CO₂-rich atmosphere creates a runaway \n" 
            "greenhouse effect, making Venus the hottest planet in our solar system with surface temperatures around 464°C. The \n" 
            "upper atmosphere exhibits a phenomenon called \"super-rotation,\" where winds blow much faster than the planet's slow \n" 
            "rotation."
)

def create_venus_atmosphere_shell(center_position=(0, 0, 0)):
    """Creates Venus's lower atmosphere shell."""
    # Define layer properties
    layer_info = {
        'radius_fraction': 1.01,  
        'color': 'rgb(150, 200, 255)',  # Light blue for atmosphere
        'opacity': 0.5,
        'name': 'Lower Atmosphere',
        'description': (
            "Venus boasts an extremely dense atmosphere, about 90 times the pressure of Earth's atmosphere at the surface. It is <br>" 
            "composed primarily of carbon dioxide (about 96.5%) and nitrogen (about 3.5%), with trace amounts of other gases, <br>" 
            "including sulfuric acid clouds that completely enshroud the planet. This thick, CO₂-rich atmosphere creates a runaway <br>" 
            "greenhouse effect, making Venus the hottest planet in our solar system with surface temperatures around 464°C. The <br>" 
            "upper atmosphere exhibits a phenomenon called \"super-rotation,\" where winds blow much faster than the planet's slow <br>" 
            "rotation.<br><br>"
            "The \"lower atmosphere\" of Venus is generally considered to be the troposphere, which extends from the surface up to \n" 
            "an altitude of approximately 60 kilometers. This region contains the dense, hot air and the main cloud layers."
        )
    }
    
    # Calculate radius in AU
    layer_radius = layer_info['radius_fraction'] * VENUS_RADIUS_AU
    
    # Create sphere points
    x, y, z = create_sphere_points(layer_radius, n_points=50)
    
    # Apply center position offset
    center_x, center_y, center_z = center_position
    x = x + center_x
    y = y + center_y
    z = z + center_z
    
    traces = [
        go.Scatter3d(
            x=x, y=y, z=z,
            mode='markers',
            marker=dict(
                size=2.5,
                color=layer_info['color'],
                opacity=layer_info['opacity']
            ),
            name=f"Venus: {layer_info['name']}",
            text=[layer_info['description']] * len(x),
            customdata=[f"Venus: {layer_info['name']}"] * len(x),
            hovertemplate='%{text}<extra></extra>',
            showlegend=True
        )
    ]
    
    return traces

venus_upper_atmosphere_info = (
            "In summary, the upper atmosphere of Venus is a significant region:\n" 
            "* The mesosphere occupies roughly 1.5-1.6% of Venus's radius.\n" 
            "* The thermosphere extends to at least 3.3% of Venus's radius.\n" 
            "* The ionosphere spans a considerable range within the thermosphere and exosphere, potentially reaching about 8% or \n" 
            "  more of Venus's radius for significant charged particle densities. The exosphere gradually fades out into space."
)

def create_venus_upper_atmosphere_shell(center_position=(0, 0, 0)):
    """Creates Venus's upper atmosphere shell."""
    # Define layer properties
    layer_info = {
        'radius_fraction': 1.08,  # Mesosphere, thermosphere, and exosphere
        'color': 'rgb(100, 150, 255)',  # Lighter blue
        'opacity': 0.3,
        'name': 'Upper Atmosphere',
        'description': (
            "The upper atmosphere of Venus is a complex and dynamic region extending far beyond the troposphere. It doesn't have the <br>" 
            "same distinct layers (stratosphere, mesosphere, thermosphere) as Earth's in the same way due to the very different thermal <br>" 
            "structure and composition. However, we can broadly consider the regions above the main cloud deck (around 70 km) as the <br>" 
            "upper atmosphere. Here's a look at some key parts of the upper atmosphere and their approximate extents:<br>" 
            "* Mesosphere (approximately 60 km to 90-100 km): Above the main cloud layers, the temperature starts to decrease with <br>" 
            "  altitude. This region is considered the mesosphere. It's a transition zone between the lower, rapidly rotating atmosphere <br>" 
            "  and the upper atmosphere where solar radiation plays a more dominant role. Extent in Venus radii: The top of this layer is <br>" 
            "  around 90-100 km. So, the mesosphere extends up to about 1.5-1.6% of Venus's radius.<br>" 
            "* Thermosphere (approximately 90-100 km to 200+ km): Above the mesosphere, the temperature increases significantly with <br>" 
            "  altitude due to the absorption of solar extreme ultraviolet (EUV) radiation. This is the thermosphere. Unlike Earth's <br>" 
            "  thermosphere, Venus's thermosphere is surprisingly cold, with average temperatures around 300 K (27°C), and even colder on <br>" 
            "  the night side (the \"cryosphere\" around 90-120 km can reach extremely low temperatures). This is due to efficient <br>" 
            "  radiative cooling by carbon dioxide. The thermosphere is also where significant day-night differences in temperature and <br>" 
            "  density occur due to Venus's slow rotation. A global circulation pattern moves hot air from the dayside to the nightside <br>" 
            "  at high altitudes. Extent in Venus radii: The thermosphere extends to at least 200 km, and potentially much higher, gradually <br>" 
            "  thinning into the exosphere. So, the thermosphere extends to at least 3.3% of Venus's radius.<br>" 
            "* Ionosphere (approximately 120 km to several hundred km): Within the thermosphere and extending into the exosphere lies the <br>" 
            "  ionosphere, a region where solar radiation has ionized the atmospheric gases, creating a layer of charged particles (ions <br>" 
            "  and electrons). Venus has a substantial ionosphere, with peak electron densities occurring around 120-140 km altitude. The <br>" 
            "  ionosphere plays a crucial role in interacting with the solar wind, as Venus lacks a strong global magnetic field.<br>" 
            "  * The solar wind directly impacts the ionosphere, leading to the formation of an induced magnetosphere.<br>" 
            "  * The nightside ionosphere is more variable and less dense than the dayside ionosphere, but it can extend to very high <br>" 
            "    altitudes, even forming a long, comet-like tail under certain solar wind conditions.<br>" 
            "  Extent in Venus radii: The main part of the ionosphere extends from about 120 km to several hundred kilometers. If we <br>" 
            "  consider an upper limit of, say, 500 km for a significant ionospheric density: So, the ionosphere can extend up to about 8.3% <br>" 
            "  of Venus's radius. However, the outermost fringes can be even more extended.<br>" 
            "* Exosphere (extends from where the atmosphere is very thin outwards into space): The uppermost layer of Venus's atmosphere <br>" 
            "  is the exosphere, where the gas density is so low that atoms and molecules can escape into space. The boundary between the <br>" 
            "  thermosphere and exosphere (the exobase) is not sharply defined but is generally considered to be above where collisions <br>" 
            "  between particles become infrequent. This is likely several hundred kilometers above the surface. The exosphere gradually <br>" 
            "  fades into space and interacts directly with the solar wind. Extent in Venus radii: The exosphere has no well-defined upper <br>" 
            "  limit. It extends outwards until the planet's gravity is no longer the dominant force.<br>" 
            "In summary, the upper atmosphere of Venus is a significant region:<br>" 
            "* The mesosphere occupies roughly 1.5-1.6% of Venus's radius.<br>" 
            "* The thermosphere extends to at least 3.3% of Venus's radius.<br>" 
            "* The ionosphere spans a considerable range within the thermosphere and exosphere, potentially reaching about 8% or more of <br>" 
            "  Venus's radius for significant charged particle densities.<br>" 
            "* The exosphere gradually fades out into space. It's important to remember that these are approximate extents, and the <br>" 
            "  boundaries between these regions are not always sharp and can vary with solar activity and other factors. The upper <br>" 
            "  atmosphere of Venus is a subject of ongoing research, and future missions will undoubtedly refine our understanding of <br>" 
            "  its structure and dynamics."
        )
    }
    
    # Calculate radius in AU
    layer_radius = layer_info['radius_fraction'] * VENUS_RADIUS_AU
    
    # Create sphere points
    x, y, z = create_sphere_points(layer_radius, n_points=50)
    
    # Apply center position offset
    center_x, center_y, center_z = center_position
    x = x + center_x
    y = y + center_y
    z = z + center_z
    
    traces = [
        go.Scatter3d(
            x=x, y=y, z=z,
            mode='markers',
            marker=dict(
                size=2.0,
                color=layer_info['color'],
                opacity=layer_info['opacity']
            ),
            name=f"Venus: {layer_info['name']}",
            text=[layer_info['description']] * len(x),
            customdata=[f"Venus: {layer_info['name']}"] * len(x),
            hovertemplate='%{text}<extra></extra>',
            showlegend=True
        )
    ]
    
    sun_traces = create_sun_direction_indicator(
        center_position=center_position, 
        shell_radius=layer_radius
    )
    for trace in sun_traces:
        traces.append(trace) 

    return traces

venus_magnetosphere_info = (
            "SET MANUAL SCALE TO AT LEAST 0.005 AU TO VISUALIZE.\n\n" 

            "Venus has a very weak, induced magnetosphere. Unlike Earth's magnetic field, which is generated internally by its \n" 
            "liquid iron core, Venus's weak magnetosphere is formed by the interaction of the solar wind with the planet's \n" 
            "ionosphere (the upper layer of its atmosphere containing charged particles). This induced magnetosphere is not as \n" 
            "effective at deflecting charged particles from the Sun as Earth's strong magnetic field."
)

def create_venus_magnetosphere_shell(center_position=(0, 0, 0)):
    """Creates Venus's magnetosphere."""
    traces = []
    
    # Parameters for magnetosphere components (in Venus radii)
    params = {
        # Compressed sunward side
        'sunward_distance': 1.5,  # Compressed toward the sun
        
        # Equatorial extension (wider than polar)
        'equatorial_radius': 1.0,
        'polar_radius': 1.0,
        
        # Magnetotail parameters
        'tail_length': 60,  # Length of visible magnetotail
        'tail_base_radius': 1.5,  # Radius at the base of the tail
        'tail_end_radius': 30,  # Radius at the end of the tail
        
        # Radiation belts
    #    'inner_belt_distance': 1.5,  # Distance in Earth radii
    #    'outer_belt_distance': 4.5,  # Distance in Earth radii
    #    'belt_thickness': 0.5,
    }
    
    # Scale everything by Venus's radius in AU
    for key in params:
        params[key] *= VENUS_RADIUS_AU
    
    # Create magnetosphere main shape
    x, y, z = create_magnetosphere_shape(params)
    
    # Unpack center position
    center_x, center_y, center_z = center_position
    
    # 1. Add the main magnetosphere structure
    x = np.array(x) + center_x
    y = np.array(y) + center_y
    z = np.array(z) + center_z
    
    magnetosphere_text = ["Venus has a very weak, induced magnetosphere. Unlike Earth's magnetic field, which is generated internally by its <br>" 
            "liquid iron core, Venus's weak magnetosphere is formed by the interaction of the solar wind with the planet's <br>" 
            "ionosphere (the upper layer of its atmosphere containing charged particles). This induced magnetosphere is not as <br>" 
            "effective at deflecting charged particles from the Sun as Earth's strong magnetic field.<br><br>" 
            "The solar wind's magnetic field drapes around Venus, creating a comet-shaped magnetosphere with a bow shock on the <br>" 
            "sunward side and a long magnetotail extending away from the Sun. The extent of Venus's induced magnetosphere is highly <br>" 
            "variable and depends on the strength and direction of the solar wind.<br>" 
            "* Bow Shock: The bow shock, which is the outermost boundary where the supersonic solar wind is slowed and deflected by <br>" 
            "  Venus, typically stands off a few thousand kilometers above the dayside surface. At the subsolar point (the point <br>" 
            "  directly facing the Sun), it's often located around about 1.3 to 1.7 radii from the planet's center. However, this <br>" 
            "  distance can vary significantly with solar wind conditions.<br>"
            "  The Bow Shock points towards the Sun along the X-axis. The XY plane is the ecliptic.<br>" 
            "* Magnetopause: The magnetopause is the inner boundary of the magnetosphere, where the magnetic pressure of the induced <br>" 
            "  magnetosphere balances the pressure of the shocked solar wind. On the dayside, the magnetopause is typically found much <br>" 
            "  closer to the planet than the bow shock, often around 1.05 to 1.1 radii from the planet's center during solar minimum <br>" 
            "  conditions. It can be pushed closer to the planet during periods of high solar wind pressure.<br>" 
            "* Magnetotail: The magnetotail extends far downstream from Venus, in the anti-sunward direction. Its length is much more <br>" 
            "  variable and can stretch to many Venus radii. Some observations have suggested that the magnetotail can extend to at <br>" 
            "  least ∼45 radii and possibly even further during active solar wind conditions.<br>" 
            "  * Estimating the precise base radius and end radius of Venus's induced magnetotail is challenging due to its dynamic <br>" 
            "    nature and dependence on the ever-changing solar wind conditions. Unlike Earth's magnetotail, which is anchored by <br>" 
            "    a strong internal magnetic field, Venus's magnetotail is constantly being shaped and influenced by the solar wind <br>" 
            "    flow and the interplanetary magnetic field (IMF).<br>" 
            "    * Base Radius: The \"base\" of the magnetotail can be considered the region just behind Venus where the induced <br>" 
            "      magnetosphere forms a tail-like structure. This transition region is not a sharp boundary but rather a gradual <br>" 
            "      change in plasma and magnetic field characteristics. Near Venus, the magnetotail has a somewhat cylindrical or <br>" 
            "      lobed structure. Studies using Venus Express data have estimated the typical radius of the near-Venus magnetotail <br>" 
            "      to be around 1 to 1.5 Venus radii.<br>" 
            "    * End Radius (Length): The length of Venus's magnetotail is highly variable and can extend to significant distances <br>" 
            "      downstream. Recent flybys by spacecraft like Solar Orbiter have provided new insights into the far reaches of the <br>" 
            "      tail. Observations have detected the presence of the magnetotail and its boundaries (bow shock and induced <br>" 
            "      magnetospheric boundary) extending to at least 60 Venus radii (∼363,120 km) downstream. There is even some evidence <br>" 
            "      suggesting that under certain solar wind conditions, the tail might extend even further, possibly up to or beyond 100 <br>" 
            "      Venus radii. One study of Mariner 10 data suggested possible detection of the tail as far as ∼100 radii downstream. <br>" 
            "      * Dynamic Nature: The solar wind's pressure, speed, and the orientation of the IMF constantly buffet Venus's induced <br>" 
            "        magnetosphere, causing significant variations in its size and shape.<br>" 
            "      * Boundary Identification: Defining the exact outer boundary of the magnetotail can be challenging as the plasma <br>" 
            "        environment gradually transitions back to the solar wind.<br>" 
            "      * Limited Far-Tail Observations: While recent missions have provided valuable data, the far magnetotail of Venus has <br>" 
            "        not been as extensively sampled as Earth's.<br>" 
            "    * Estimating the width of Venus's magnetotail at distances of 45 to 60 Venus radii is challenging due to the <br>" 
            "      limited number of direct observations so far out in the tail. Most detailed studies have focused on the near-<br>" 
            "      Venus magnetotail (within ∼10 to 12 radii). However, recent flybys, particularly by Solar Orbiter, are providing <br>" 
            "      new insights.<br>" 
            "      * Overall Expansion: The induced magnetotail of Venus is known to flare or expand as it extends downstream from <br>" 
            "        the planet. This is a common feature of magnetotails formed by the interaction of the solar wind with a planetary <br>" 
            "        obstacle.<br>" 
            "      * Solar Orbiter Observations: A recent study based on Solar Orbiter flybys, which reached as far as 60 radii downstream, <br>" 
            "        suggests that the bow shock (the outer boundary) at this distance is about 15-20 radii in the lateral direction <br>" 
            "        (which would give a total width of roughly 30-40 radii if we assume some symmetry around the tail axis). The induced <br>" 
            "        magnetospheric boundary (IMB), which is inside the bow shock, was still detected at 20 radii downstream in this study, <br>" 
            "        but its width at larger distances was not specifically quantified.<br>" 
            "      * Earlier Estimates: Older studies based on Pioneer Venus Orbiter data, which primarily sampled the tail up to ∼12 radii, <br>" 
            "        found the tail to be about 4 radii wide and 3.2 radii high at that distance. Extrapolating this far out is difficult <br>" 
            "        due to the flaring. Therefore, a reasonable estimate for the width of Venus's magnetotail at 45 to 60 Venus radii <br>" 
            "        would likely be on the order of tens of Venus radii, possibly in the range of 20 to 40 radii or even wider, based on <br>" 
            "        the observed bow shock dimensions at that distance. The actual width can vary significantly depending on the solar <br>" 
            "        wind conditions (pressure, speed, IMF orientation). The shape of the tail might not be perfectly circular at these <br>" 
            "        large distances.<br>"
            "In summary, the extent of Venus's induced magnetosphere in terms of Venus radii is:<br>" 
            "* Dayside (from the center): Extends to roughly 1.3 - 1.7 radii at the bow shock and about 1.05 - 1.1 radii at the <br>" 
            "  magnetopause.<br>"
            "  The Bow Shock points towards the Sun along the X-axis. The XY plane is the ecliptic.<br>" 
            "* Nightside (magnetotail): Can extend to at least tens of Venus radii, with estimates reaching up to ∼45 radii or <br>" 
            "  more under certain solar wind conditions.<br>" 
            "The size and shape of Venus's induced magnetosphere are highly dynamic, constantly being shaped by the ever-changing <br>" 
            "solar wind."]
    
    magnetosphere_customdata = ['Venus: Magnetosphere']

    traces.append(
        go.Scatter3d(
            x=x, y=y, z=z,
            mode='markers',
            marker=dict(
                size=2.0,
                color='rgb(180, 180, 255)', # Light blue for magnetic field
                opacity=0.2
            ),
            name='Venus: Magnetosphere',
            text=magnetosphere_text * len(x),
            customdata=magnetosphere_customdata * len(x),      
            hovertemplate='%{text}<extra></extra>',
            showlegend=True
        )
    )
    
    # 2. Create and add bow shock
    bow_shock_x = []
    bow_shock_y = []
    bow_shock_z = []
    
    n_phi = 30
    n_theta = 30
    bow_shock_standoff = 15 * VENUS_RADIUS_AU
    bow_shock_width = 25 * VENUS_RADIUS_AU
    
    # Create a paraboloid for the bow shock
    for i_phi in range(n_phi):
        phi = (i_phi / (n_phi-1)) * np.pi  # Only the front half
        
        for i_theta in range(n_theta):
            theta = (i_theta / (n_theta-1)) * 2 * np.pi
            
            # Paraboloid shape, flattened in x-direction for bow shock
            x = -bow_shock_standoff * np.cos(phi)  # Negative for sunward direction
            rho = bow_shock_width * (1 + np.sin(phi)) / 2  # Wider for larger phi (away from sun)
            y = rho * np.cos(theta)
            z = rho * np.sin(theta)
            
            bow_shock_x.append(x)
            bow_shock_y.append(y)
            bow_shock_z.append(z)
    
    # Apply center position offset
    bow_shock_x = np.array(bow_shock_x) + center_x
    bow_shock_y = np.array(bow_shock_y) + center_y
    bow_shock_z = np.array(bow_shock_z) + center_z
    
    bow_shock_text = ["Bow Shock: The bow shock, which is the outermost boundary where the supersonic solar wind is slowed and <br>" 
                      "deflected by Venus, typically stands off a few thousand kilometers above the dayside surface. At the subsolar <br>" 
                      "point (the point directly facing the Sun), it's often located around ∼0.3 to 0.7 radii above the surface, or <br>" 
                      "about 1.3 to 1.7 radii from the planet's center. However, this distance can vary significantly with solar wind <br>" 
                      "conditions.<br>"
                      "The Bow Shock points towards the Sun along the X-axis. The XY plane is the ecliptic."]
    
    bow_shock_customdata = ['Venus: Bow Shock']

    traces.append(
        go.Scatter3d(
            x=bow_shock_x,
            y=bow_shock_y,
            z=bow_shock_z,
            mode='markers',
            marker=dict(
                size=1.5,
                color='rgb(255, 200, 150)',  # Orange-ish color for bow shock
                opacity=0.2
            ),
            name='Venus: Bow Shock',
            text=bow_shock_text * len(bow_shock_x),
            customdata=bow_shock_customdata * len(bow_shock_x),  # This was the line causing the error
            hovertemplate='%{text}<extra></extra>',
            showlegend=True
        )
    )
        
    sun_traces = create_sun_direction_indicator(
        center_position=center_position, 
        shell_radius=60 * VENUS_RADIUS_AU
    )
    for trace in sun_traces:
        traces.append(trace)

    return traces

venus_hill_sphere_info = (
            "SET MANUAL SCALE TO AT LEAST 0.01 AU TO VISUALIZE.\n\n" 
            "Venus's Hill Sphere is the region where its gravitational influence is dominant over the gravitational influence of \n" 
            "the Sun. The size of the Hill sphere depends on its mass and its distance from the Sun. Venus's Hill sphere extends \n" 
            "to approximately 1 million kilometers from the planet. Within this sphere, Venus's gravity is the primary force \n" 
            "attracting its own moons or any potential debris. However, Venus has no natural moons."
)

def create_venus_hill_sphere_shell(center_position=(0, 0, 0)):
    """Creates Venus's Hill sphere."""
    # Hill sphere radius in Venus radii
    radius_fraction = 166  # Venus's Hill sphere is about 1 million km or 166 Venus radii
    
    # Calculate radius in AU
    radius_au = radius_fraction * VENUS_RADIUS_AU
    
    # Create sphere points with fewer points for memory efficiency
    n_points = 30  # Reduced for large spheres
    x, y, z = create_sphere_points(radius_au, n_points=n_points)
    
    # Apply center position offset
    center_x, center_y, center_z = center_position
    x = x + center_x
    y = y + center_y
    z = z + center_z
    
    # Create hover text
    hover_text = ("Venus's Hill Sphere (extends to ~166 Venus radii or about 1 million km)<br><br>" 
                "The Hill sphere is the region around a where its own gravity is the dominant force in attracting satellites. For <br>" 
                "a planet orbiting a star, it's the region where the planet's gravity is stronger than the star's tidal forces.<br><br>" 
                "The Hill Sphere radius can be described in words as follows: it is equal to the planet's average distance from the <br>" 
                "Sun (its orbital semi-major axis) multiplied by the cube root of the ratio between the planet's mass and three times <br>" 
                "the Sun's mass. In other words, you take how far the planet orbits out from the Sun, then scale that distance by the <br>" 
                "cube root of (planet mass ÷ [3 x solar mass]) to find the boundary within which the planet's gravity dominates over the Sun's."
                )
    
    # Create the trace
    traces = [
        go.Scatter3d(
            x=x,
            y=y,
            z=z,
            mode='markers',
            marker=dict(
                size=1.0,
                color='rgb(0, 255, 0)',  # Green for Hill sphere
                opacity=0.25
            ),
            name='Venus: Hill Sphere',
            text=[hover_text] * len(x),
            customdata=['Venus: Hill Sphere'] * len(x),
            hovertemplate='%{text}<extra></extra>',
            showlegend=True
        )
    ]
    
    sun_traces = create_sun_direction_indicator(
        center_position=center_position, 
        shell_radius=radius_au
    )
    for trace in sun_traces:
        traces.append(trace) 

    return traces